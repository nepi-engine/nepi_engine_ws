#############
# SETUP
# 1) Copy this file to your home dir 
# - Open a terminal in this files folder and type
# cp nepi_connect_aliases ~/.nepi_aliases

# 2) Add the following lines to your ~/.bashrc file 
###########################
# NEPI bashrc aliases
#if [ -f ~/.nepi_aliases ]; then
#    . ~/.nepi_aliases
#fi

# 3) Open a new terminal and test a 
# NEPI sftp alias connection by typing, then 'exit' to exit
# SDK


###################################
#NEPI Git Env Setup
# Start SSH Agent
#----------------------------

SSH_ENV="$HOME/.ssh/environment"

function run_ssh_env {
  . "${SSH_ENV}" > /dev/null
}

function start_ssh_agent {
  echo "Initializing new SSH agent..."
  ssh-agent | sed 's/^echo/#echo/' > "${SSH_ENV}"
  echo "succeeded"
  chmod 600 "${SSH_ENV}"

  run_ssh_env;

  ssh-add ~/.ssh/id_rsa;
}

if [ -f "${SSH_ENV}" ]; then
  run_ssh_env;
  ps -ef | grep ${SSH_AGENT_PID} | grep ssh-agent$ > /dev/null || {
    start_ssh_agent;
  }
else
  start_ssh_agent;
fi


alias gitroot="cd $(git rev-parse --show-toplevel)"

###################################
#NEPI Git Utility Functions

#GIT Command Line Branch Display
parse_git_branch() {
     git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/(\1)/'
}
export PS1="\u@\h \[\e[32m\]\w \[\e[91m\]\$(parse_git_branch)\[\e[00m\]$ "


# Commit all repos in folder
parse_git_args()
{
    git_args=""
    end_comment=""
    for var in "$@"
    do
        if [[ $var == '-m' ]];
        then
            git_args+=" -m \""
            end_comment="\"" 
        else
            git_args+=" $var"
        fi
    done
    git_args+=$end_comment

    echo $git_args
}

multiple_git_func()
{
    start=$(pwd)
    git_args=$(parse_git_args $@)
    root=`git rev-parse --show-toplevel` #find the repo from which the command was run

    # go to root apply command and then go to sub repos (hardcoded location wrt root)
    cd $root
    echo "=============================="
    echo "issuing git $git_args on $root"
    eval "git $git_args"


    cd repo2 # repo2 is installed in root, could be anywhere else relative to root
    echo "=============================="
    echo "issuing git $git_args on repo2"
    eval "git $git_args"
   
    #go back to initial folder
    cd $start
}

alias mgit=multiple_git_func

###################################
# NEPI Engine Deployment Env. Variables

export NEPI_SSH_KEY_PATH=~/sshkeys/nepi_engine_default_private_ssh_key
alias sshn="ssh -v -o StrictHostKeyChecking=no -i $NEPI_SSH_KEY_PATH nepi@nepi"
alias scpn="scp -o StrictHostKeyChecking=no -i $NEPI_SSH_KEY_PATH nepi@nepi"
alias sftpn="sftp -o StrictHostKeyChecking=no -i $NEPI_SSH_KEY_PATH nepi@nepi"


alias pingn="ping 192.168.179.103"

export NEPI_REMOTE_SETUP=1
export NEPI_TARGET_IP=192.168.179.103
export NEPI_TARGET_USERNAME=nepi
export NEPI_SSH_KEY=~/sshkeys/nepi_engine_default_private_ssh_key
export NEPI_TARGET_SRC_DIR=/mnt/nepi_storage/nepi_src # This is the default if unset



# REMOTE ROS CONNECTION
#source /opt/ros/noetic/setup.bash
#source ~/nepi_catkin_ws/devel/setup.bash
#export ROS_MASTER_URI=http://192.168.179.103:11311
#export ROS_IP=192.168.179.5



###################################
#NEPI sftp folder shortcuts
# Function to open sftp to location on nepi device
# Example call: sftpnl '/mnt/nepi_storage'
function sftpnl(){
sftp -o StrictHostKeyChecking=no -i $NEPI_SSH_KEY_PATH nepi@nepi:../.."$@"
}
function USER(){
	sftpnl '/mnt/nepi_storage'
}
function AUTO(){
	sftpnl '/mnt/nepi_storage/automation_scripts'
}
function DATA(){
	sftpnl '/mnt/nepi_storage/data'
}	
function AI(){
	sftpnl '/mnt/nepi_storage/ai_models'
}	
function INSTALLS(){
	sftpnl '/mnt/nepi_storage/installs'
}	
function SRC(){
	sftpnl '/mnt/nepi_storage/nepi_src'
}	
function CFG(){
	sftpnl '/mnt/nepi_storage/user_cfg'
}	
function TMP(){
	sftpnl '/mnt/nepi_storage/tmp'
}	
function NFI(){
	sftpnl '/mnt/nepi_storage/nepi_full_img'
}	
function NFIA(){
	sftpnl '/mnt/nepi_storage/nepi_full_img_archive'
}	
function NEPI(){
	sftpnl '/opt/nepi/ros'
}	
function ETC(){
	sftpnl '/opt/nepi/ros/etc'
}	
function LIB(){
	sftpnl '/opt/nepi/ros/lib'
}	
function APPS(){
	sftpnl '/opt/nepi/ros/share/nepi_apps'
}	
function AIFS(){
	sftpnl '/opt/nepi/ros/share/nepi_aifs'
}	
function SHARE(){
	sftpnl '/opt/nepi/ros/share'
}	
function DRIVERS(){
	sftpnl '/opt/nepi/ros/lib/nepi_drivers'
}	
function MANAGERS(){
	sftpnl '/opt/nepi/ros/lib/nepi_managers'
}	
function PYTHON(){
	sftpnl '/opt/nepi/ros/lib/python3/dist-packages/'
}	
function SDK(){
	sftpnl '/opt/nepi/ros/lib/python3/dist-packages/nepi_sdk'
}	
function API(){
	sftpnl '/opt/nepi/ros/lib/python3/dist-packages/nepi_api'
}	
function RUI_ENV(){
	sftpnl '/opt/nepi/nepi_rui'
}	
function RUI(){
	sftpnl '/opt/nepi/nepi_rui/src/rui_webserver/rui-app/src'
}

# Print out the nepi sftp shortcuts
function nepi(){
    text="
    ## NEPI sftp folder shortcuts ##
    AUTO = /mnt/nepi_storage/automation_scripts
    DATA = /mnt/nepi_storage/data
    CFG = /mnt/nepi_storage/user_cfg
    AI = /mnt/nepi_storage/ai_models
    INSTALLS = /mnt/nepi_storage/installs
    SRC = /mnt/nepi_storage/nepi_src
    TMP = /mnt/nepi_storage/tmp
    NFI = /mnt/nepi_storage/nepi_full_img
    NFIA = /mnt/nepi_storage/nepi_full_img_archive
    NEPI = /opt/nepi/ros
    ETC = /opt/nepi/ros/etc
    LIB = /opt/nepi/ros/lib
    APPS = /opt/nepi/ros/share/nepi_apps
    API = /opt/nepi/ros/lib/python3/dist-packages/nepi_api
    AIFS = /opt/nepi/ros/share/nepi_aifs
    SHARE = /opt/nepi/ros/share
    DRIVERS = /opt/nepi/ros/lib/nepi_drivers
    MANAGERS = /opt/nepi/ros/lib/nepi_managers
    PYTHON = /opt/nepi/ros/lib/python3/dist-packages/
    SDK = /opt/nepi/ros/lib/python3/dist-packages/nepi_sdk
    RUI_ENV = /opt/nepi/nepi_rui
    RUI = /opt/nepi/nepi_rui/src/rui_webserver/rui-app/src
    "
    echo "$text"
}

